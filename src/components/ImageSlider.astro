---
interface Props {
  images: string[];
}

const { images } = Astro.props;
---

<div class="slider-container">
  <div class="slider">
    {images.map((image, index) => (
      <div class="slide" data-index={index}>
        <img src={image} alt={`Slide ${index + 1}`} />
      </div>
    ))}
  </div>
  <div class="slider-nav">
    {images.map((_, index) => (
      <button class="slider-dot" data-index={index}></button>
    ))}
  </div>
</div>

<script>
  let currentSlide = 0;
  const slides = document.querySelectorAll('.slide');
  const dots = document.querySelectorAll('.slider-dot');
  
  function showSlide(index: number) {
    slides.forEach((slide: Element) => {
      (slide as HTMLElement).style.transform = `translateX(-${index * 100}%)`;
    });
    
    dots.forEach((dot, i) => {
      dot.classList.toggle('active', i === index);
    });
  }
  
  function nextSlide() {
    currentSlide = (currentSlide + 1) % slides.length;
    showSlide(currentSlide);
  }
  
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      currentSlide = index;
      showSlide(currentSlide);
    });
  });
  
  showSlide(0);
  setInterval(nextSlide, 2000);
</script>

<style>
  .slider-container {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    aspect-ratio: 16/9;
  }
  
  .slider {
    display: flex;
    width: 100%;
    height: 100%;
  }
  
  .slide {
    min-width: 100%;
    transition: transform 0.5s ease;
  }
  
  .slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .slider-nav {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
  }
  
  .slider-dot {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    border: none;
    cursor: pointer;
    padding: 0;
  }
  
  .slider-dot.active {
    background: white;
  }
</style>